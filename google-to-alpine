#!/usr/bin/env ruby
require 'open3'
require 'optparse'
require 'pathname'

@google = 'google'
@from_stdin = false
@delimiter = nil
@search = '.'

# Set up the path to the `google` script.  If given a directory, append 'google'
def setup_goog(path_or_script)
	if File.directory?(path_or_script)
		@google = Pathname.new(path_or_script) + "google"
	else
		@google = path_or_script
	end
end

# Parse commandline options
optparse = OptionParser.new do |o|
	o.on('--google PATH') { |p| setup_goog(p) }
	o.on('--title STRING', '--search STRING') { |s| @search = s }
	o.on('--stdin') { @from_stdin = true ; @delimiter ||= ',' }
	o.on('--delimiter STRING') { |s| @delimiter = s }
end
optparse.parse!(ARGV)

@delimiter ||= "\t"

# Check for sane output from running `google --version`
Open3.popen3(*[@google,'--version']) do |i,out,err|
	ver = out.read
	abort <<INSTALL if ver.empty?
You need to install the googlecl program
from http://code.google.com/p/googlecl
INSTALL
	abort <<UNEXPECTED unless ver =~ /\Agoogle \d([\d.]+)\Z/
Exiting, since I couldn't understand this output from #{@google} --version:
>>>
#{ver}
<<<
UNEXPECTED
end

# Get the list of contacts
lines = nil
if @from_stdin
	# just read it from the passed filename or stdin
	lines = ARGF.readlines
else
	# otherwise, run the googlecl utility
	cmd = [@google]
	cmd += %w{contacts list --fields=nickname,name,email}
	cmd << '--title' << @search
	cmd << '--delimiter' << @delimiter
	Open3.popen3(*cmd) { |i,o,e| lines = o.readlines }
end

# convert \xHH and \uHHHH escapes in the returned output into Unicode chars
def unescape(val)
	val.gsub!(/(\\x[\da-f]{2}|\\u[\da-f]{4})/) { [$1[2..-1].hex].pack('U') }
	val
end

# run the contacts search, and spit out an Alpine addressbook
lines.each do |line|
	line.chomp!
	fields = line.split(@delimiter).map { |v| unescape v }
	fields = [''] + fields if fields.size == 2
	nick, name, emails = fields
	nick = '' if nick == 'None'
	emails.split(", ").reject {|e| e == 'None'}.each do |email|
		# remove an optional 'type' (e.g. home/work/other)
		email.gsub!(/^\S+ /,'')
		puts "#{nick}\t#{name}\t#{name} <#{email}>"
	end
end
